// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          String     @id @default(uuid())
  name                        String     
  email                       String     @unique
  passwordHash                String
  isVerified                  Boolean    @default(false)
  resetPasswordCode           String     @default("")
  resetPasswordCodeExpiresIn  DateTime   @default(now())
  verificationCode            String     @default("")
  verificationCodeExpiresIn   DateTime   @default(now())
  transactions                Transaction[]
  budgets                     Budget[]
  createdAt                   DateTime   @default(now())
  updatedAt                   DateTime   @updatedAt
}

model Transaction {
  id          String            @id @default(uuid())
  type        TransactionType    
  amount      Float
  category    Category        @relation(fields: [categoryId] , references: [id])
  categoryId  String 
  note        String?
  date        DateTime
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt          
}
enum TransactionType {
  INCOME
  EXPENSE
}

model Category {
  id             String     @id @default(uuid())
  name           String     @unique
  transactions   Transaction[]
  budgets        Budget[]
}

model Budget {
  id           String     @id @default(uuid())
  amount       Float
  month        Int
  year         Int
  category     Category   @relation(fields: [categoryId], references: [id])
  categoryId   String
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt       
}